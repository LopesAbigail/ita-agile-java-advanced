// Generated by Selenium IDE
package test;

import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class ConversorTest {
    
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void fahrenheitToCelsius() {
    // Test name: fahrenheitToCelsius
    // Step # | name | target | value
    // 1 | open | /TemperatureCalculator/ | 
    driver.get("http://localhost:8080/TemperatureCalculator/");
    // 2 | setWindowSize | 697x728 | 
    driver.manage().window().setSize(new Dimension(697, 728));
    // 3 | click | name=value | 
    driver.findElement(By.name("value")).click();
    // 4 | type | name=value | 100
    driver.findElement(By.name("value")).sendKeys("100");
    // 5 | click | id=origin | 
    driver.findElement(By.id("origin")).click();
    // 6 | click | id=goal | 
    driver.findElement(By.id("goal")).click();
    // 7 | click | css=input:nth-child(6) | 
    driver.findElement(By.cssSelector("input:nth-child(6)")).click();
    // 8 | click | css=html | 
    driver.findElement(By.cssSelector("html")).click();
    // 9 | assertText | css=p | Converting 100 degrees fahrenheit to celsius we get the value: 37
    assertThat(driver.findElement(By.cssSelector("p")).getText(), is("Converting 100 degrees fahrenheit to celsius we get the value: 37"));
  }
  
  @Test
  public void CelsiusToFahrenheit() {
    // Test name: fahrenheitToCelsius
    // Step # | name | target | value
    // 1 | open | /TemperatureCalculator/ | 
    driver.get("http://localhost:8080/TemperatureCalculator/");
    // 2 | setWindowSize | 697x728 | 
    driver.manage().window().setSize(new Dimension(697, 728));
    // 3 | click | name=value | 
    driver.findElement(By.name("value")).click();
    // 4 | type | name=value | 300
    driver.findElement(By.name("value")).sendKeys("300");
    // 5 | click | id=origin | 
    driver.findElement(By.id("origin")).click();
    // 6 | click | id=goal | 
    driver.findElement(By.id("goal")).click();
    // 7 | click | css=input:nth-child(6) | 
    driver.findElement(By.cssSelector("input:nth-child(6)")).click();
    // 8 | click | css=html | 
    driver.findElement(By.cssSelector("html")).click();
    // 9 | assertText | css=p | Converting 300 degrees celsius to fahrenheit we get the value: 572
    assertThat(driver.findElement(By.cssSelector("p")).getText(), is("Converting 300 degrees celsius to fahrenheit we get the value: 572"));
  }
}
